<?xml version="1.0" encoding="UTF-8"?>

<web-app id="WebApp_ID" version="2.4"

         xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

  <display-name>Tzg-wap</display-name>
    
  
  <context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>tzg-wap.root</param-value>
	</context-param>
  <!-- Spring ApplicationContext配置文件的路径,可使用通配符,多个路径用,空格隔
		此参数用于后面的Spring Context Loader -->
  	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
				classpath*:spring/application*.xml,classpath*:spring/spring-*.xml
		</param-value>
	</context-param>
	<!--Spring的ApplicationContext 载入 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    
     <!-- 翁耀中修改session监听器 -->
	<!-- <listener>
		<listener-class>com.tzg.wap.listener.SessionListener</listener-class>
	</listener> -->
	
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.properties</param-value>
    </context-param>
    
	<!-- Spring MVC Servlet -->
	<servlet>
		<servlet-name>spring</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>
				classpath*:spring/springmvc.xml
			</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
		
	</servlet>
	<servlet-mapping>
		<servlet-name>spring</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
    
	<filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>
            org.springframework.web.filter.CharacterEncodingFilter
        </filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!--以下自己添加  -->
    <filter>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<servlet-name>spring</servlet-name>
	</filter-mapping>
	 <filter>  
        <filter-name>XssFilter</filter-name>  
        <filter-class>com.tzg.wap.filter.XssFilter</filter-class> 
        <init-param> 
  			<param-name>excludeGETStartWith</param-name> 
  			<param-value>/js/,/css/,/img/</param-value> 
  		</init-param> 
    </filter>  
    

     
    <filter-mapping>  
        <filter-name>XssFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
        <dispatcher>REQUEST</dispatcher>  
    </filter-mapping> 
	<filter>
		<filter-name>XssFileter</filter-name>
	  	<filter-class>com.tzg.wap.utils.XssFilter</filter-class>
	</filter>
	<filter-mapping>
	  	<filter-name>XssFileter</filter-name>
	  	<url-pattern>/*</url-pattern>
	</filter-mapping>
	
    <!--以上自己添加  -->
   <!--  <filter>  
        <filter-name>XssFilter</filter-name>  
        <filter-class>com.tzg.wap.filter.XssFilter</filter-class> 
        <init-param> 
  			<param-name>excludeGETStartWith</param-name> 
  			<param-value>/js/,/css/,/img/</param-value> 
  		</init-param> 
    </filter>  
    <filter-mapping>  
        <filter-name>XssFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
        <dispatcher>REQUEST</dispatcher>  
    </filter-mapping> -->
    <!-- 
	<filter>
		<filter-name>XssFileter</filter-name>
	  	<filter-class>com.tzg.wap.utils.XssFilter</filter-class>
	</filter>
	<filter-mapping>
	  	<filter-name>XssFileter</filter-name>
	  	<url-pattern>/*</url-pattern>
	</filter-mapping>
	-->
		<!-- 对于静态资源文件的访问处理： 1、可激活Tomcat的defaultServlet来处理静态文件.让defaultServlet先拦截静态请求,Tomcat, 
		Jetty, JBoss, and GlassFish 默认 Servlet的名字 "default" 2、在spring3.0.4以后版本提供了mvc:resources标签支持 
		3、使用<mvc:default-servlet-handler/> -->
	<!-- <servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.jpg</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.png</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.gif</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.js</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.css</url-pattern>
	</servlet-mapping>
	静态压缩先注释掉 <servlet-mapping> <servlet-name>default</servlet-name> <url-pattern>*.gzjs</url-pattern> 
		</servlet-mapping> <servlet-mapping> <servlet-name>default</servlet-name> 
		<url-pattern>*.cssgz</url-pattern> </servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.txt</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.html</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.woff</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.ttf</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.eot</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.ico</url-pattern>
	</servlet-mapping>
    <session-config>
		<session-timeout>30</session-timeout>
	</session-config>
	<error-page>
	    <error-code>500</error-code>
	    <location>/error/500</location>
	</error-page>
	<error-page>
	    <error-code>405</error-code>
	    <location>/error/500</location>
	</error-page>
	<error-page>
	    <error-code>404</error-code>
	    <location>/error/404</location>
	</error-page>
	
	默认首页定义
	<welcome-file-list>
		<welcome-file>/index</welcome-file>
	</welcome-file-list> -->
	
	<session-config>
		<session-timeout>60</session-timeout>
	</session-config>
	
	
</web-app>
