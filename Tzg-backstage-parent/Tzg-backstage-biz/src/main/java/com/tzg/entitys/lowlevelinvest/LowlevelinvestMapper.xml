<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tzg.entitys.lowlevelinvest.LowlevelinvestMapper">	
	<resultMap id="BaseResultMap" type="com.tzg.entitys.lowlevelinvest.Lowlevelinvest">
		<result property="id" jdbcType="INTEGER" column="id"/>
		<result property="ipyramidAccountId" jdbcType="INTEGER" column="iPyramidAccountId"/>
		<result property="ioneLevel" jdbcType="INTEGER" column="iOneLevel"/>
		<result property="ioneLevelInvest" jdbcType="INTEGER" column="iOneLevelInvest"/>
		<result property="itwoLevel" jdbcType="INTEGER" column="iTwoLevel"/>
		<result property="itwoLevelInvest" jdbcType="INTEGER" column="iTwoLevelInvest"/>
		<result property="dtCount" jdbcType="TIMESTAMP" column="dtCount"/>
    </resultMap>
	
	<sql id="columns">
	    <![CDATA[
        id ,iPyramidAccountId ,iOneLevel ,iOneLevelInvest ,iTwoLevel ,iTwoLevelInvest ,dtCount 
	    ]]>
	</sql>
	
	<insert id="save" parameterType="com.tzg.entitys.lowlevelinvest.Lowlevelinvest" useGeneratedKeys="true" keyProperty="id">
		<selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
	      SELECT LAST_INSERT_ID() AS id
	    </selectKey>
	<![CDATA[
		INSERT INTO tblowlevelinvest (
        	iPyramidAccountId ,
        	iOneLevel ,
        	iOneLevelInvest ,
        	iTwoLevel ,
        	iTwoLevelInvest ,
        	dtCount 
		) VALUES (
        	#{ipyramidAccountId,jdbcType=INTEGER} ,
        	#{ioneLevel,jdbcType=INTEGER} ,
        	#{ioneLevelInvest,jdbcType=INTEGER} ,
        	#{itwoLevel,jdbcType=INTEGER} ,
        	#{itwoLevelInvest,jdbcType=INTEGER} ,
        	#{dtCount,jdbcType=TIMESTAMP} 
		)
	]]>
	</insert>

	<update id="update" parameterType="com.tzg.entitys.lowlevelinvest.Lowlevelinvest">
		UPDATE tblowlevelinvest
		<set>
			<if test="ipyramidAccountId != null">
	        iPyramidAccountId = #{ipyramidAccountId,jdbcType=INTEGER} ,
	        </if>
			<if test="ioneLevel != null">
	        iOneLevel = #{ioneLevel,jdbcType=INTEGER} ,
	        </if>
			<if test="ioneLevelInvest != null">
	        iOneLevelInvest = #{ioneLevelInvest,jdbcType=INTEGER} ,
	        </if>
			<if test="itwoLevel != null">
	        iTwoLevel = #{itwoLevel,jdbcType=INTEGER} ,
	        </if>
			<if test="itwoLevelInvest != null">
	        iTwoLevelInvest = #{itwoLevelInvest,jdbcType=INTEGER} ,
	        </if>
			<if test="dtCount != null">
	        dtCount = #{dtCount,jdbcType=TIMESTAMP} 
	        </if>
	    </set>
		WHERE 
	        id = #{id,jdbcType=INTEGER} 
	</update>

	<delete id="deleteById" parameterType="java.lang.Integer">
	<![CDATA[
		DELETE FROM tblowlevelinvest WHERE
        id = #{id} 
	]]>
	</delete>
    
	<select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
	    SELECT <include refid="columns"/> 
	<![CDATA[
		FROM tblowlevelinvest 
		WHERE 
        id = #{id} 
	]]>
	</select>
	 
	<select id="findPageCount" resultType="java.lang.Integer" parameterType="java.util.Map">
    	select count(*) from tblowlevelinvest where 1=1
		<include refid="queryWhere"/>
	</select>
    
	<select id="findPage" resultMap="BaseResultMap" parameterType="java.util.Map">
		select <include refid="columns"/>  from tblowlevelinvest where 1=1
		<include refid="queryWhere"/> 
	    <![CDATA[ ORDER BY id DESC ]]>
        <![CDATA[ LIMIT ${startRecord},${endRecord} ]]>
	</select>
	
	<sql id="queryWhere">
		<if test="id != null and id.trim() != ''">
		and id = #{id}
		</if>
		<if test="ipyramidAccountId != null and ipyramidAccountId.trim() != ''">
		and iPyramidAccountId = #{ipyramidAccountId}
		</if>
		<if test="ioneLevel != null and ioneLevel.trim() != ''">
		and iOneLevel = #{ioneLevel}
		</if>
		<if test="ioneLevelInvest != null and ioneLevelInvest.trim() != ''">
		and iOneLevelInvest = #{ioneLevelInvest}
		</if>
		<if test="itwoLevel != null and itwoLevel.trim() != ''">
		and iTwoLevel = #{itwoLevel}
		</if>
		<if test="itwoLevelInvest != null and itwoLevelInvest.trim() != ''">
		and iTwoLevelInvest = #{itwoLevelInvest}
		</if>
		<if test="dtCountBegin != null and dtCountBegin.trim() != ''">
		and dtCount >= #{dtCountBegin}
		</if>
		<if test="dtCountEnd != null and dtCountEnd.trim() != ''">
		and dtCount &lt;= #{dtCountEnd}
		</if>
	</sql>
</mapper>


