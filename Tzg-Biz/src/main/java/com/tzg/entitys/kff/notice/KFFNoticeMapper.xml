<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tzg.entitys.kff.notice.KFFNoticeMapper">	
	<resultMap id="BaseResultMap" type="com.tzg.entitys.kff.notice.KFFNotice">
		<result property="noticeId" jdbcType="INTEGER" column="notice_id"/>
		<result property="title" jdbcType="VARCHAR" column="title"/>
		<result property="content" jdbcType="VARCHAR" column="content"/>
		<result property="createTime" jdbcType="TIMESTAMP" column="createTime"/>
		<result property="updateTime" jdbcType="TIMESTAMP" column="updateTime"/>
		<result property="createUserId" jdbcType="INTEGER" column="create_user_id"/>
		<result property="status" jdbcType="INTEGER" column="status"/>
    </resultMap>
	
	<sql id="columns">
	    <![CDATA[
        notice_id ,title ,content ,createTime ,updateTime ,create_user_id ,status 
	    ]]>
	</sql>
	
	<insert id="save" parameterType="com.tzg.entitys.kff.notice.KFFNotice" useGeneratedKeys="true" keyProperty="noticeId">
		<selectKey resultType="java.lang.Integer" keyProperty="noticeId" order="AFTER" >
	      SELECT LAST_INSERT_ID() AS id
	    </selectKey>
	<![CDATA[
		INSERT INTO tbnotice (
        	title ,
        	content ,
        	createTime ,
        	updateTime ,
        	create_user_id ,
        	status 
		) VALUES (
        	#{title,jdbcType=VARCHAR} ,
        	#{content,jdbcType=VARCHAR} ,
        	#{createTime,jdbcType=TIMESTAMP} ,
        	#{updateTime,jdbcType=TIMESTAMP} ,
        	#{createUserId,jdbcType=INTEGER} ,
        	#{status,jdbcType=INTEGER} 
		)
	]]>
	</insert>

	<update id="update" parameterType="com.tzg.entitys.kff.notice.KFFNotice">
		UPDATE tbnotice
		<set>
			<if test="title != null">
	        title = #{title,jdbcType=VARCHAR} ,
	        </if>
			<if test="content != null">
	        content = #{content,jdbcType=VARCHAR} ,
	        </if>
			<if test="createTime != null">
	        createTime = #{createTime,jdbcType=TIMESTAMP} ,
	        </if>
			<if test="updateTime != null">
	        updateTime = #{updateTime,jdbcType=TIMESTAMP} ,
	        </if>
			<if test="createUserId != null">
	        create_user_id = #{createUserId,jdbcType=INTEGER} ,
	        </if>
			<if test="status != null">
	        status = #{status,jdbcType=INTEGER} 
	        </if>
	    </set>
		WHERE 
	        notice_id = #{noticeId,jdbcType=INTEGER} 
	</update>

	<delete id="deleteById" parameterType="java.lang.Integer">
	<![CDATA[
		DELETE FROM tbnotice WHERE
        notice_id = #{noticeId} 
	]]>
	</delete>
    
	<select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
	    SELECT <include refid="columns"/> 
	<![CDATA[
		FROM tbnotice 
		WHERE 
        notice_id = #{noticeId} 
	]]>
	</select>
	
	<select id="selectLatestNotice" resultMap="BaseResultMap" >
	    SELECT <include refid="columns"/> 
	<![CDATA[
		FROM tbnotice 
		WHERE 
        status = 1 order by noticeId desc limit 1
	]]>
	</select>
	
	 
	<select id="findPageCount" resultType="java.lang.Integer" parameterType="java.util.Map">
    	select count(*) from tbnotice where 1=1
		<include refid="queryWhere"/>
	</select>
    
	<select id="findPage" resultMap="BaseResultMap" parameterType="java.util.Map">
		select <include refid="columns"/>  from tbnotice where 1=1
		<include refid="queryWhere"/> 
	    <![CDATA[ ORDER BY notice_id DESC ]]>
        <![CDATA[ LIMIT ${startRecord},${endRecord} ]]>
	</select>
	
	<sql id="queryWhere">
		<if test="noticeId != null and noticeId.trim() != ''">
		and notice_id = #{noticeId}
		</if>
		<if test="title != null and title.trim() != ''">
		and title = #{title}
		</if>
		<if test="content != null and content.trim() != ''">
		and content = #{content}
		</if>
		<if test="createTimeBegin != null and createTimeBegin.trim() != ''">
		and createTime >= #{createTimeBegin}
		</if>
		<if test="createTimeEnd != null and createTimeEnd.trim() != ''">
		and createTime &lt;= #{createTimeEnd}
		</if>
		<if test="updateTimeBegin != null and updateTimeBegin.trim() != ''">
		and updateTime >= #{updateTimeBegin}
		</if>
		<if test="updateTimeEnd != null and updateTimeEnd.trim() != ''">
		and updateTime &lt;= #{updateTimeEnd}
		</if>
		<if test="createUserId != null and createUserId.trim() != ''">
		and create_user_id = #{createUserId}
		</if>
		<if test="status != null and status.trim() != ''">
		and status = #{status}
		</if>
	</sql>
</mapper>


