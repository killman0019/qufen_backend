<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tzg.entitys.kff.tokenrecords.TokenrecordsMapper">	
	<resultMap id="BaseResultMap" type="com.tzg.entitys.kff.tokenrecords.Tokenrecords">
		<result property="tokenRecordsId" jdbcType="INTEGER" column="token_records_id"/>
		<result property="userId" jdbcType="INTEGER" column="user_id"/>
		<result property="tradeCode" jdbcType="VARCHAR" column="trade_code"/>
		<result property="tradeType" jdbcType="INTEGER" column="trade_type"/>
		<result property="functionDesc" jdbcType="VARCHAR" column="function_desc"/>
		<result property="functionType" jdbcType="TINYINT" column="function_type"/>
		<result property="amount" jdbcType="DECIMAL" column="amount"/>
		<result property="tradeDate" jdbcType="TIMESTAMP" column="trade_date"/>
		<result property="balance" jdbcType="DECIMAL" column="balance"/>
		<result property="createTime" jdbcType="TIMESTAMP" column="createTime"/>
		<result property="updateTime" jdbcType="TIMESTAMP" column="updateTime"/>
		<result property="status" jdbcType="INTEGER" column="status"/>
		<result property="memo" jdbcType="VARCHAR" column="memo"/>
    </resultMap>
	
	<sql id="columns">
	    <![CDATA[
        token_records_id ,user_id ,trade_code ,trade_type ,function_desc ,function_type ,amount ,trade_date ,balance ,createTime ,updateTime ,status ,memo 
	    ]]>
	</sql>
	
	<insert id="save" parameterType="com.tzg.entitys.kff.tokenrecords.Tokenrecords" useGeneratedKeys="true" keyProperty="tokenRecordsId">
		<selectKey resultType="java.lang.Integer" keyProperty="tokenRecordsId" order="AFTER" >
	      SELECT LAST_INSERT_ID() AS id
	    </selectKey>
	<![CDATA[
		INSERT INTO tbtokenrecords (
        	user_id ,
        	trade_code ,
        	trade_type ,
        	function_desc ,
        	function_type ,
        	amount ,
        	trade_date ,
        	balance ,
        	createTime ,
        	updateTime ,
        	status ,
        	memo 
		) VALUES (
        	#{userId,jdbcType=INTEGER} ,
        	#{tradeCode,jdbcType=VARCHAR} ,
        	#{tradeType,jdbcType=INTEGER} ,
        	#{functionDesc,jdbcType=VARCHAR} ,
        	#{functionType,jdbcType=TINYINT} ,
        	#{amount,jdbcType=DECIMAL} ,
        	#{tradeDate,jdbcType=TIMESTAMP} ,
        	#{balance,jdbcType=DECIMAL} ,
        	#{createTime,jdbcType=TIMESTAMP} ,
        	#{updateTime,jdbcType=TIMESTAMP} ,
        	#{status,jdbcType=INTEGER} ,
        	#{memo,jdbcType=VARCHAR} 
		)
	]]>
	</insert>

	<update id="update" parameterType="com.tzg.entitys.kff.tokenrecords.Tokenrecords">
		UPDATE tbtokenrecords
		<set>
			<if test="userId != null">
	        user_id = #{userId,jdbcType=INTEGER} ,
	        </if>
			<if test="tradeCode != null">
	        trade_code = #{tradeCode,jdbcType=VARCHAR} ,
	        </if>
			<if test="tradeType != null">
	        trade_type = #{tradeType,jdbcType=INTEGER} ,
	        </if>
			<if test="functionDesc != null">
	        function_desc = #{functionDesc,jdbcType=VARCHAR} ,
	        </if>
			<if test="functionType != null">
	        function_type = #{functionType,jdbcType=TINYINT} ,
	        </if>
			<if test="amount != null">
	        amount = #{amount,jdbcType=DECIMAL} ,
	        </if>
			<if test="tradeDate != null">
	        trade_date = #{tradeDate,jdbcType=TIMESTAMP} ,
	        </if>
			<if test="balance != null">
	        balance = #{balance,jdbcType=DECIMAL} ,
	        </if>
			<if test="createTime != null">
	        createTime = #{createTime,jdbcType=TIMESTAMP} ,
	        </if>
			<if test="updateTime != null">
	        updateTime = #{updateTime,jdbcType=TIMESTAMP} ,
	        </if>
			<if test="status != null">
	        status = #{status,jdbcType=INTEGER} ,
	        </if>
			<if test="memo != null">
	        memo = #{memo,jdbcType=VARCHAR} 
	        </if>
	    </set>
		WHERE 
	        token_records_id = #{tokenRecordsId,jdbcType=INTEGER} 
	</update>

	<delete id="deleteById" parameterType="java.lang.Integer">
	<![CDATA[
		DELETE FROM tbtokenrecords WHERE
        token_records_id = #{tokenRecordsId} 
	]]>
	</delete>
    
	<select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
	    SELECT <include refid="columns"/> 
	<![CDATA[
		FROM tbtokenrecords 
		WHERE 
        token_records_id = #{tokenRecordsId} 
	]]>
	</select>
	 
	<select id="findPageCount" resultType="java.lang.Integer" parameterType="java.util.Map">
    	select count(*) from tbtokenrecords where 1=1
		<include refid="queryWhere"/>
	</select>
    
	<select id="findPage" resultMap="BaseResultMap" parameterType="java.util.Map">
		select <include refid="columns"/>  from tbtokenrecords where 1=1
		<include refid="queryWhere"/> 
	    <![CDATA[ ORDER BY token_records_id DESC ]]>
        <![CDATA[ LIMIT ${startRecord},${endRecord} ]]>
	</select>
	
	<sql id="queryWhere">
		<if test="tokenRecordsId != null and tokenRecordsId.trim() != ''">
		and token_records_id = #{tokenRecordsId}
		</if>
		<if test="userId != null and userId.trim() != ''">
		and user_id = #{userId}
		</if>
		<if test="tradeCode != null and tradeCode.trim() != ''">
		and trade_code = #{tradeCode}
		</if>
		<if test="tradeType != null and tradeType.trim() != ''">
		and trade_type = #{tradeType}
		</if>
		<if test="functionDesc != null and functionDesc.trim() != ''">
		and function_desc = #{functionDesc}
		</if>
		<if test="functionType != null and functionType.trim() != ''">
		and function_type = #{functionType}
		</if>
		<if test="amount != null">
		and amount = #{amount}
		</if>
		<if test="tradeDateBegin != null and tradeDateBegin.trim() != ''">
		and trade_date >= #{tradeDateBegin}
		</if>
		<if test="tradeDateEnd != null and tradeDateEnd.trim() != ''">
		and trade_date &lt;= #{tradeDateEnd}
		</if>
		<if test="balance != null ">
		and balance = #{balance}
		</if>
		<if test="createTimeBegin != null and createTimeBegin.trim() != ''">
		and createTime >= #{createTimeBegin}
		</if>
		<if test="createTimeEnd != null and createTimeEnd.trim() != ''">
		and createTime &lt;= #{createTimeEnd}
		</if>
		<if test="updateTimeBegin != null and updateTimeBegin.trim() != ''">
		and updateTime >= #{updateTimeBegin}
		</if>
		<if test="updateTimeEnd != null and updateTimeEnd.trim() != ''">
		and updateTime &lt;= #{updateTimeEnd}
		</if>
		<if test="status != null and status.trim() != ''">
		and status = #{status}
		</if>
		<if test="memo != null and memo.trim() != ''">
		and memo = #{memo}
		</if>
	</sql>
</mapper>


