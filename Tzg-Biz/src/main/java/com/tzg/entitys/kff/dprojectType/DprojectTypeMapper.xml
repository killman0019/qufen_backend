<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tzg.entitys.kff.dprojectType.DprojectTypeMapper">	
	<resultMap id="BaseResultMap" type="com.tzg.entitys.kff.dprojectType.DprojectType">
		<result property="projectTypeId" jdbcType="INTEGER" column="project_type_id"/>
		<result property="projectTypeName" jdbcType="VARCHAR" column="project_type_name"/>
		<result property="createUserId" jdbcType="INTEGER" column="create_user_id"/>
		<result property="createTime" jdbcType="TIMESTAMP" column="createTime"/>
		<result property="updateTime" jdbcType="TIMESTAMP" column="updateTime"/>
		<result property="status" jdbcType="TINYINT" column="status"/>
    </resultMap>
	
	<sql id="columns">
	    <![CDATA[
        project_type_id ,project_type_name ,create_user_id ,createTime ,updateTime ,status 
	    ]]>
	</sql>
	
	<insert id="save" parameterType="com.tzg.entitys.kff.dprojectType.DprojectType" useGeneratedKeys="true" keyProperty="id">
		<selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
	      SELECT LAST_INSERT_ID() AS id
	    </selectKey>
	<![CDATA[
		INSERT INTO d_project_type (
        	project_type_name ,
        	create_user_id ,
        	createTime ,
        	updateTime ,
        	status 
		) VALUES (
        	#{projectTypeName,jdbcType=VARCHAR} ,
        	#{createUserId,jdbcType=INTEGER} ,
        	#{createTime,jdbcType=TIMESTAMP} ,
        	#{updateTime,jdbcType=TIMESTAMP} ,
        	#{status,jdbcType=TINYINT} 
		)
	]]>
	</insert>

	<update id="update" parameterType="com.tzg.entitys.kff.dprojectType.DprojectType">
		UPDATE d_project_type
		<set>
			<if test="projectTypeName != null">
	        project_type_name = #{projectTypeName,jdbcType=VARCHAR} ,
	        </if>
			<if test="createUserId != null">
	        create_user_id = #{createUserId,jdbcType=INTEGER} ,
	        </if>
			<if test="createTime != null">
	        createTime = #{createTime,jdbcType=TIMESTAMP} ,
	        </if>
			<if test="updateTime != null">
	        updateTime = #{updateTime,jdbcType=TIMESTAMP} ,
	        </if>
			<if test="status != null">
	        status = #{status,jdbcType=TINYINT} 
	        </if>
	    </set>
		WHERE 
	        project_type_id = #{projectTypeId,jdbcType=INTEGER} 
	</update>

	<delete id="deleteById" parameterType="java.lang.Integer">
	<![CDATA[
		DELETE FROM d_project_type WHERE
        project_type_id = #{projectTypeId} 
	]]>
	</delete>
    
	<select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
	    SELECT <include refid="columns"/> 
	<![CDATA[
		FROM d_project_type 
		WHERE 
        project_type_id = #{projectTypeId} 
	]]>
	</select>
	 
	<select id="findPageCount" resultType="java.lang.Integer" parameterType="java.util.Map">
    	select count(*) from d_project_type where 1=1
		<include refid="queryWhere"/>
	</select>
    
	<select id="findPage" resultMap="BaseResultMap" parameterType="java.util.Map">
		select <include refid="columns"/>  from d_project_type where 1=1
		<include refid="queryWhere"/> 
	    <![CDATA[ ORDER BY project_type_id DESC ]]>
        <![CDATA[ LIMIT ${startRecord},${endRecord} ]]>
	</select>
	
	<select id="findAllProjectTypes" resultMap="BaseResultMap" parameterType="java.util.Map">
		select <include refid="columns"/>  from d_project_type where status=1
		<include refid="queryWhere"/> 
	    <![CDATA[ ORDER BY project_type_id DESC ]]>
	</select>
	
	
	<sql id="queryWhere">
		<if test="projectTypeId != null and projectTypeId.trim() != ''">
		and project_type_id = #{projectTypeId}
		</if>
		<if test="projectTypeName != null and projectTypeName.trim() != ''">
		and project_type_name = #{projectTypeName}
		</if>
		<if test="createUserId != null and createUserId.trim() != ''">
		and create_user_id = #{createUserId}
		</if>
		<if test="createTimeBegin != null and createTimeBegin.trim() != ''">
		and createTime >= #{createTimeBegin}
		</if>
		<if test="createTimeEnd != null and createTimeEnd.trim() != ''">
		and createTime &lt;= #{createTimeEnd}
		</if>
		<if test="updateTimeBegin != null and updateTimeBegin.trim() != ''">
		and updateTime >= #{updateTimeBegin}
		</if>
		<if test="updateTimeEnd != null and updateTimeEnd.trim() != ''">
		and updateTime &lt;= #{updateTimeEnd}
		</if>
		<if test="status != null and status.trim() != ''">
		and status = #{status}
		</if>
	</sql>
</mapper>


