<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tzg.entitys.kff.collect.CollectMapper">	
	<resultMap id="BaseResultMap" type="com.tzg.entitys.kff.collect.Collect">
		<result property="collectId" jdbcType="INTEGER" column="collect_id"/>
		<result property="collectUserId" jdbcType="INTEGER" column="collect_user_id"/>
		<result property="projectId" jdbcType="INTEGER" column="project_id"/>
		<result property="postId" jdbcType="INTEGER" column="post_id"/>
		<result property="postType" jdbcType="INTEGER" column="post_type"/>
		<result property="status" jdbcType="INTEGER" column="status"/>
		<result property="createTime" jdbcType="TIMESTAMP" column="createTime"/>
		<result property="updateTime" jdbcType="TIMESTAMP" column="updateTime"/>
    </resultMap>
	
	<sql id="columns">
	    <![CDATA[
        collect_id ,collect_user_id ,project_id ,post_id ,post_type ,status ,createTime ,updateTime 
	    ]]>
	</sql>
	
	<insert id="save" parameterType="com.tzg.entitys.kff.collect.Collect" useGeneratedKeys="true" keyProperty="collectId">
		<selectKey resultType="java.lang.Integer" keyProperty="collectId" order="AFTER" >
	      SELECT LAST_INSERT_ID() AS collectId
	    </selectKey>
	<![CDATA[
		INSERT INTO tbcollect (
        	collect_user_id ,
        	project_id ,
        	post_id ,
        	post_type ,
        	status ,
        	createTime ,
        	updateTime 
		) VALUES (
        	#{collectUserId,jdbcType=INTEGER} ,
        	#{projectId,jdbcType=INTEGER} ,
        	#{postId,jdbcType=INTEGER} ,
        	#{postType,jdbcType=INTEGER} ,
        	#{status,jdbcType=INTEGER} ,
        	#{createTime,jdbcType=TIMESTAMP} ,
        	#{updateTime,jdbcType=TIMESTAMP} 
		)
	]]>
	</insert>

	<update id="update" parameterType="com.tzg.entitys.kff.collect.Collect">
		UPDATE tbcollect
		<set>
			<if test="collectUserId != null">
	        collect_user_id = #{collectUserId,jdbcType=INTEGER} ,
	        </if>
			<if test="projectId != null">
	        project_id = #{projectId,jdbcType=INTEGER} ,
	        </if>
			<if test="postId != null">
	        post_id = #{postId,jdbcType=INTEGER} ,
	        </if>
			<if test="postType != null">
	        post_type = #{postType,jdbcType=INTEGER} ,
	        </if>
			<if test="status != null">
	        status = #{status,jdbcType=INTEGER} ,
	        </if>
			<if test="createTime != null">
	        createTime = #{createTime,jdbcType=TIMESTAMP} ,
	        </if>
			<if test="updateTime != null">
	        updateTime = #{updateTime,jdbcType=TIMESTAMP} 
	        </if>
	    </set>
		WHERE 
	        collect_id = #{collectId,jdbcType=INTEGER} 
	</update>

	<delete id="deleteById" parameterType="java.lang.Integer">
	<![CDATA[
		DELETE FROM tbcollect WHERE
        collect_id = #{collectId} 
	]]>
	</delete>
    
	<select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
	    SELECT <include refid="columns"/> 
	<![CDATA[
		FROM tbcollect 
		WHERE 
        collect_id = #{collectId} 
	]]>
	</select>
	 
	<select id="findPageCount" resultType="java.lang.Integer" parameterType="java.util.Map">
    	select count(*) from tbcollect where 1=1
		<include refid="queryWhere"/>
	</select>
    
	<select id="findPage" resultMap="BaseResultMap" parameterType="java.util.Map">
		select <include refid="columns"/>  from tbcollect where status=1
		<include refid="queryWhere"/> 
	    <![CDATA[ ORDER BY collect_id DESC ]]>
        <![CDATA[ LIMIT ${startRecord},${endRecord} ]]>
	</select>
	<select id="findByWhere" resultMap="BaseResultMap" parameterType="java.util.Map">
		select <include refid="columns"/>  from tbcollect where 1=1
		<include refid="queryWhere"/> 
	    <![CDATA[ ORDER BY collect_id DESC ]]>
	</select>	
	<sql id="queryWhere">
		<if test="collectId != null and collectId.trim() != ''">
		and collect_id = #{collectId}
		</if>
		<if test="collectUserId != null and collectUserId.trim() != ''">
		and collect_user_id = #{collectUserId}
		</if>
		<if test="projectId != null and projectId.trim() != ''">
		and project_id = #{projectId}
		</if>
		<if test="postId != null and postId.trim() != ''">
		and post_id = #{postId}
		</if>
		<if test="postType != null and postType.trim() != ''">
		and post_type = #{postType}
		</if>
		<if test="status != null and status.trim() != ''">
		and status = #{status}
		</if>
		<if test="createTimeBegin != null and createTimeBegin.trim() != ''">
		and createTime >= #{createTimeBegin}
		</if>
		<if test="createTimeEnd != null and createTimeEnd.trim() != ''">
		and createTime &lt;= #{createTimeEnd}
		</if>
		<if test="updateTimeBegin != null and updateTimeBegin.trim() != ''">
		and updateTime >= #{updateTimeBegin}
		</if>
		<if test="updateTimeEnd != null and updateTimeEnd.trim() != ''">
		and updateTime &lt;= #{updateTimeEnd}
		</if>
	</sql>
</mapper>


