<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tzg.entitys.kff.dtags.DtagsMapper">
	<resultMap id="BaseResultMap" type="com.tzg.entitys.kff.dtags.Dtags">
		<result property="tagId" jdbcType="INTEGER" column="tag_id" />
		<result property="tagName" jdbcType="VARCHAR" column="tag_name" />
		<result property="createUserId" jdbcType="INTEGER" column="create_user_id" />
		<result property="createTime" jdbcType="TIMESTAMP" column="createTime" />
		<result property="updateTime" jdbcType="TIMESTAMP" column="updateTime" />
		<result property="status" jdbcType="BIT" column="status" />
		<result property="typeId" jdbcType="INTEGER" column="type_id" />
		<result property="imgPath" jdbcType="VARCHAR" column="img_path" />
		<result property="stickTop" jdbcType="INTEGER" column="stick_top" />
		<result property="stickUpdateTime" jdbcType="TIMESTAMP" column="stick_update_time" />
	</resultMap>

	<sql id="columns">
        tag_id ,tag_name ,create_user_id ,createTime ,updateTime ,status,type_id,img_path,stick_top,stick_update_time
	</sql>

	<insert id="save" parameterType="com.tzg.entitys.kff.dtags.Dtags" useGeneratedKeys="true" keyProperty="tagId">
		<selectKey resultType="java.lang.Integer" keyProperty="tagId" order="AFTER">
			SELECT LAST_INSERT_ID() AS id
		</selectKey>
	<![CDATA[
		INSERT INTO d_tags (
        	tag_name ,
        	create_user_id ,
        	createTime ,
        	updateTime ,
        	status ,
        	type_id
		) VALUES (
        	#{tagName,jdbcType=VARCHAR} ,
        	#{createUserId,jdbcType=INTEGER} ,
        	#{createTime,jdbcType=TIMESTAMP} ,
        	#{updateTime,jdbcType=TIMESTAMP} ,
        	#{status,jdbcType=BIT} ,
        	#{typeId,jdbcType=INTEGER}
		)
	]]>
	</insert>

	<update id="update" parameterType="com.tzg.entitys.kff.dtags.Dtags">
		UPDATE d_tags
		<set>
			<if test="tagName != null">
				tag_name = #{tagName,jdbcType=VARCHAR} ,
			</if>
			<if test="createUserId != null">
				create_user_id = #{createUserId,jdbcType=INTEGER} ,
			</if>
			<if test="createTime != null">
				createTime = #{createTime,jdbcType=TIMESTAMP} ,
			</if>
			<if test="updateTime != null">
				updateTime = #{updateTime,jdbcType=TIMESTAMP} ,
			</if>
			<if test="status != null">
				status = #{status,jdbcType=BIT} ,
			</if>

			<if test="typeId !=null">

				type_id = #{typeId,jdbcType=INTEGER}

			</if>
		</set>
		WHERE
		tag_id = #{tagId,jdbcType=INTEGER}
	</update>

	<delete id="deleteById" parameterType="java.lang.Integer">
	<![CDATA[
		DELETE FROM d_tags WHERE
        tag_id = #{tagId} 
	]]>
	</delete>

	<select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		SELECT
		<include refid="columns" /> 
	<![CDATA[
		FROM d_tags 
		WHERE 
        tag_id = #{tagId} 
	]]>
	</select>

	<select id="findAllTags" resultMap="BaseResultMap">
		select
		<include refid="columns" />
		from d_tags where status=1
	</select>
	<select id="findAllTagsName">
		select tag_name from d_tags where status=1
	</select>


	<sql id="queryWhere">
		<if test="tagId != null and tagId.trim() != ''">
			and tag_id = #{tagId}
		</if>
		<if test="title != null">
			and (tag_name like "%" #{title} "%" or memo like "%" #{title} "%")
		</if>
		<if test="tagName != null and tagName.trim() != ''">
			and tag_name = #{tagName}
		</if>
		<if test="createUserId != null and createUserId.trim() != ''">
			and create_user_id = #{createUserId}
		</if>
		<if test="createTimeBegin != null and createTimeBegin.trim() != ''">
			and createTime >= #{createTimeBegin}
		</if>
		<if test="createTimeEnd != null and createTimeEnd.trim() != ''">
			and createTime &lt;= #{createTimeEnd}
		</if>
		<if test="updateTimeBegin != null and updateTimeBegin.trim() != ''">
			and updateTime >= #{updateTimeBegin}
		</if>
		<if test="updateTimeEnd != null and updateTimeEnd.trim() != ''">
			and updateTime &lt;= #{updateTimeEnd}
		</if>
		<if test="status != null">
			and status = #{status}
		</if>
		<if test="typeId != null ">
			and type_id = #{typeId}
		</if>
		<if test="imgPath != null">
			and img_path = #{imgPath,jdbcType=VARCHAR}
		</if>
		<if test="stickTop != null">
			and stick_top = #{stickTop,jdbcType=INTEGER}
		</if>
		<if test="stickUpdateTime != null">
			and stick_update_time = #{stickUpdateTime,jdbcType=TIMESTAMP} 
		</if>
	</sql>


	<select id="findByMap" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="columns" />
		from
		d_tags
		<where>
			<include refid="queryWhere" />
		</where>
	</select>
	
	<sql id="table_name">
		d_tags
    </sql>
    
    <select id="findPageCount" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count(1) from d_tags where 1=1
		<include refid="queryWhere" />
	</select>

	<select id="findPage" resultMap="BaseResultMap" parameterType="java.util.Map">
		select * from d_tags where 1=1
		<include refid="queryWhere" /> 
	    <choose>
			<when test="sortField != null and sortField != ''">
				ORDER BY ${sortField} ${sortSequence}
			</when>
			<otherwise>
	    	 <![CDATA[ ORDER BY tag_id DESC ]]>
			</otherwise>
		</choose>
        <![CDATA[ LIMIT ${startRecord},${endRecord} ]]>
	</select>
	
	<select id="findListByAttr" resultMap="BaseResultMap" parameterType="java.util.Map">
		select * from <include refid="table_name" />
		<include refid="condition"/>
	    <choose>
			<when test="sortField != null and sortField != ''">
				ORDER BY ${sortField} ${sortSequence}
			</when>
			<otherwise>
	    	    ORDER BY id DESC 
			</otherwise>
		</choose>
		LIMIT ${startRecord},${endRecord} 
	</select>
	
	<update id="updateByMap" parameterType="java.util.Map">
	     update <include refid="table_name" /> 
	    <set>
	      <if test="status != null">
	        status = #{status},
	      </if>
	    </set>
	    <include refid="condition"/>
	</update>
	
	<sql id="condition">
    	<where>
	    	<if test="tagId != null">
			 tag_id = #{tagId,jdbcType=INTEGER}
			</if>
			<if test="title != null">
			and (tag_name like "%"#{title}"%" or memo like "%"#{title}"%")
			</if>
			<if test="status != null">
			and status = #{status,jdbcType=INTEGER}
			</if>
			<if test="stickTop != null">
			and stick_top = #{stickTop,jdbcType=INTEGER}
			</if>
    	</where>
    </sql>


</mapper>


